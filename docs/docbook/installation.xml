<?xml version='1.0'?>
<!DOCTYPE article PUBLIC "-//OASIS//DTD DocBook XML V4.1.2//EN" "http://www.oasis-open.org/docbook/xml/4.1.2/docbookx.dtd">
<article lang="en">

  <title>Installing</title>

  <sect1>

    <title>Quick installation</title>

    <para>The basic installation is very simple:</para>

    <orderedlist>

      <listitem>

        <para>As a prerequisite you will need to have <ulink url="http://pymol.sourceforge.net/">PyMol</ulink> installed. We recommend to get a <ulink url="http://www.pymol.org/funding.html">
        sponsor version</ulink>. However, a free version (0.99) can be downloaded from here <ulink url="http://delsci.com/rel/099/">here</ulink>.</para>

      </listitem>

      <listitem>

        <para>Download the <filename>cmview.zip</filename> file from 
        <ulink url="download.html">downloads</ulink></para>

      </listitem>

      <listitem>

        <para>Unzip it into a new directory, this is where CMView will 
        be installed</para>

      </listitem>

      <listitem>

        <para>Now you just need to edit the <filename>
        cmview.cfg</filename> file to set the path to your pymol 
        executable in the PYMOL_EXECUTABLE line. You MUST use forward 
        slashes for the path and no quotes, e.g.: PYMOL_EXECUTABLE= 
        <filename>c:/Program Files/PyMol/pymol.exe</filename></para>

      </listitem>

      <listitem>

        <para>You are done! To run the program:</para>

        <itemizedlist>

          <listitem>

            <para>In linux: just run the <filename>cmview</filename> 
            shell script</para>

          </listitem>

          <listitem>

            <para>In Windows: double click on <filename>
            cmview.bat</filename></para>

          </listitem>

          <listitem>

            <para>In Mac: double click on <filename>
            CMView.jar</filename></para>

          </listitem>

        </itemizedlist>

      </listitem>

    </orderedlist>

  </sect1>

  <sect1>

    <title>The details</title>

    <sect2>

      <title>External libraries</title>

      <para>The CMView application itself is just a single java archive 
      file (jar file): <filename>CMView.jar</filename>. It uses a 
      number of external libraries which for convenience we 
      include in the downloadable zip file. These are:</para>

      <orderedlist>

        <listitem>

          <para>From <ulink url="http://commons.apache.org/">Apache 
          commons</ulink>: <filename>commons-codec-1.3.jar</filename>, 
          <filename>ws-commons-util-1.0.1.jar</filename>, <filename>
          xmlrpc-client-3.0.jar</filename>, <filename>
          xmlrpc-common-3.0.jar</filename></para>

        </listitem>

        <listitem>

          <para>From <ulink url="https://java3d.dev.java.net/">
          Java3D</ulink> 1.5.1: <filename>vecmath.jar</filename></para>

        </listitem>

        <listitem>

          <para>From the <ulink url="http://jung.sourceforge.net/">
          JUNG</ulink> project: <filename>
          collections-generic-4.01.jar</filename>, <filename>
          jung-api-2.0-alpha2.jar</filename>,
          <filename>jung-graph-impl-2.0-alpha2.jar</filename></para>

        </listitem>

        <listitem>

          <para>
          <ulink url="http://jaligner.sourceforge.net/">Jaligner</ulink>:
          <filename>jaligner.jar</filename></para>

        </listitem>

        <listitem>

          <para>Java 
          <ulink url="http://www.urbanophile.com/arenn/hacking/download.html">
          getopt</ulink>:
          <filename>java-getopt-1.0.13.jar</filename></para>

        </listitem>

      </orderedlist>

      <para>All of the jar dependencies must be placed in a <filename>
      jars</filename> directory under the directory where <filename>
      CMView.jar</filename> is located.</para>

    </sect2>

    <sect2>

      <title>Setting JVM memory</title>

      <para>What the shell/batch scripts do is just running the jar 
      with:</para>

      <programlisting>java -Xmx256m -jar CMView.jar</programlisting>
      <para>We set the JVM memory to 256MB as the contact map 
      generation requires quite a lot of memory. For very big protein 
      chains (&gt;400 aminoacids) using the ALL atom model you will 
      need even more: set it to 512MB to be on the safe side.</para>

    </sect2>

    <sect2>

      <title>Secondary Structure and DSSP</title>

      <para>By default CMView will get the secondary structure 
      annotation from the PDB file if present. For getting a more 
      consistent secondary structure annotation and to have it in those 
      cases when is missing in the pdb file, CMView can use the 
      external program DSSP to assign secondary structure. You can 
      download DSSP <ulink url="http://swift.cmbi.ru.nl/gv/dssp/">
      here</ulink>, once installed locally you will have to point the 
      config file to the executable.</para>

    </sect2>

    <sect2>

      <title>Config file</title>

      <para>There are other configurable parameters that can be set in 
      the config file. Please refer to the <ulink url="manual.html">
      user&apos;s manual</ulink> for a full description.</para>

      <para>The configuration file will be read first from the 
      directory where you installed CMView (system-wide config). 
      Per-user customisation is also possible by using a <filename>
      cmview.cfg</filename> file placed in your home directory (in 
      Windows that would be something like <filename>c:\Documents and 
      Settings\yourusername</filename>). The user configuration will 
      take precedence over the system-wide one.</para>

    </sect2>

  </sect1>

</article>

